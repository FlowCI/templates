#
# Android Project Template with Gradle
#

envs:
  FLOWCI_GIT_URL: "https://github.com/hidroh/materialistic.git"

  GRADLE_USER_HOME: "${FLOWCI_AGENT_WORKSPACE}/.gradle"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

docker:
  image: openjdk:8-jdk

steps:      
- name: setup android sdk
  envs:
    ANDROID_COMPILE_SDK: "28"
    ANDROID_BUILD_TOOLS: "28.0.2"
  plugin: android-sdk-setup

- name: clone
  plugin: 'gitclone'

- name: lint
  bash: |
    cd ${FLOWCI_GIT_REPO}
    ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint

- name: build
  bash: |
    cd ${FLOWCI_GIT_REPO}
    ./gradlew assembleDebug
  
- name: test
  bash: |
    cd ${FLOWCI_GIT_REPO}
    ./gradlew -Pci --console=plain :app:testDebug

- name: jacoco
  bash: |
    cd ${FLOWCI_GIT_REPO}
    mkdir -p ${PWD}/app/build/intermediates/classes
    ln -s ${PWD}/app/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes ${PWD}/app/build/intermediates/classes/debug
    ./gradlew -Pci --console=plain jacocoTestReport

- name: upload report
  docker:
    image: ubuntu:18.04
  envs:
    # report from jacoco
    REPORT_PATH: ${FLOWCI_GIT_REPO}/app/build/reports/coverage
    REPORT_NAME: Code Coverage
  plugin: report-upload

- name: build release
  bash: |
    cd ${FLOWCI_GIT_REPO}
    ./gradlew assembleRelease


###############################################
### to sign apk, it needs to create a 'secret' in admin page,
### and put the secret name to `SIGN_SECRET`
###############################################

# - name: sign apk
#   envs:
#     SIGN_FILE_PATTERN: '*-unsigned.apk'
#     SIGN_SECRET: android-demo
#   docker:
#     image: openjdk:8-jdk
#   plugin: android-signing

# - name: upload singed apk
#   docker:
#     image: ubuntu:18.04
#   envs:
#     artifact_pattern: '*-signed.apk'
#   plugin: 'artifact-upload'
